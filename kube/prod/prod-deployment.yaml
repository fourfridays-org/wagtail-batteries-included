apiVersion: apps/v1
kind: Deployment
metadata:
  name: wbi
spec:
  replicas: 2
  selector:
    matchLabels:
      app: wbi
  template:
    metadata:
      labels:
        app: wbi
    spec:
      initContainers:
        - name: migrate
          image: ghcr.io/fourfridays/wagtail-batteries-included:latest
          imagePullPolicy: Always
          command: ["python", "manage.py", "migrate"]
          envFrom:
          - secretRef:
              name: secret
      containers:
        - image: ghcr.io/fourfridays/wagtail-batteries-included:latest
          name: wbi
          envFrom:
          - secretRef:
              name: secret
          - configMapRef:
              name: config
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: wbi
  labels:
    app: wbi
spec:
  selector:
    app: wbi
  ports:
    - port: 8088
      targetPort: 8080
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-nginx
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  rules:
  - host: wbi.fourfridays.com
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: wbi
              port:
                number: 8088
  tls:
    - hosts:
        - wbi.fourfridays.com
      secretName: wbi-tls
# --- traefik-ingress-deprecated
# apiVersion: traefik.containo.us/v1alpha1
# kind: IngressRoute
# metadata:
#   name: app-tls
#   annotations:
#     kubernetes.io/ingress.class: traefik
# spec:
#   entryPoints:
#     - websecure
#   routes:
#     - kind: Rule
#       match: Host(`wbi.fourfridays.com`)
#       services:
#         - name: wagtail-batteries-included
#           port: 8088
#   tls: # This route uses TLS
#     secretName: wbi-tls
#     domains:
#     - main: wbi.fourfridays.com
#     certResolver: le # Uses our certificate resolver to get a certificate automatically!